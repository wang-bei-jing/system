<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zzti.dao.TopicMapper">
  <resultMap id="BaseResultMap" type="edu.zzti.bean.Topic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="ename" jdbcType="VARCHAR" property="ename" />
    <result column="contents" jdbcType="VARCHAR" property="contents" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="tno" jdbcType="INTEGER" property="tno" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="nature" jdbcType="VARCHAR" property="nature" />
    <result column="difficulty" jdbcType="VARCHAR" property="difficulty" />
    <result column="support" jdbcType="VARCHAR" property="support" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="num" jdbcType="INTEGER" property="num" />
  </resultMap>





  <resultMap id="BaseResultMapWithTeacher" type="edu.zzti.bean.Topic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="ename" jdbcType="VARCHAR" property="ename" />
    <result column="contents" jdbcType="VARCHAR" property="contents" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="tno" jdbcType="INTEGER" property="tno" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="nature" jdbcType="VARCHAR" property="nature" />
    <result column="difficulty" jdbcType="VARCHAR" property="difficulty" />
    <result column="support" jdbcType="VARCHAR" property="support" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <association property="teacher" javaType="edu.zzti.bean.Teacher">
      <result column="tno"  property="tno"  jdbcType="INTEGER"/>
      <result column="password"  property="password"  jdbcType="VARCHAR"/>
      <result column="name"  property="name"  jdbcType="VARCHAR"/>
      <result column="sex"  property="sex"  jdbcType="VARCHAR"/>
      <result column="title"  property="title"  jdbcType="VARCHAR"/>
      <result column="department"  property="department"  jdbcType="VARCHAR"/>
      <result column="office"  property="office"  jdbcType="VARCHAR"/>
      <result column="tel"  property="tel"  jdbcType="VARCHAR"/>
      <result column="email"  property="email"  jdbcType="VARCHAR"/>
      <result column="status"  property="status"  jdbcType="INTEGER"/>
    </association>
  </resultMap>
  <sql id="BaseWithTeacher_Column_List">
    tp.id, tp.cname, tp.ename, tp.contents, tp.degree, tp.tno, tp.type, tp.source, tp.nature, tp.difficulty, tp.support,
    tp.department, tp.status, tp.num,
    tr.tno,
    tr.password,
    tr.name,
    tr.sex,
    tr.title,
    tr.department,
    tr.tel,
    tr.office,
    tr.email,
    tr.status
  </sql>
  <select id="selectByCname" parameterType="java.lang.String" resultMap="BaseResultMapWithTeacher">
    select
    <include refid="BaseWithTeacher_Column_List" />
    from t_topic tp left join t_teacher tr on tp.tno=tr.tno
    where tp.cname  like concat('%',#{cname},'%')
  </select>

  <select id="selectAll"  resultMap="BaseResultMapWithTeacher">
    select
    <include refid="BaseWithTeacher_Column_List" />
    from t_topic tp left join t_teacher tr on tp.tno=tr.tno
  </select>























  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cname, ename, contents, degree, tno, type, source, nature, difficulty, support, 
    department, status, num
  </sql>
  <select id="selectByExample" parameterType="edu.zzti.bean.TopicExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_topic
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_topic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.zzti.bean.TopicExample">
    delete from t_topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.zzti.bean.Topic">
    insert into t_topic (id, cname, ename, 
      contents, degree, tno, 
      type, source, nature, 
      difficulty, support, department, 
      status, num)
    values (#{id,jdbcType=INTEGER}, #{cname,jdbcType=VARCHAR}, #{ename,jdbcType=VARCHAR}, 
      #{contents,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, #{tno,jdbcType=INTEGER}, 
      #{type,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, #{nature,jdbcType=VARCHAR}, 
      #{difficulty,jdbcType=VARCHAR}, #{support,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{num,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.zzti.bean.Topic">
    insert into t_topic
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="ename != null">
        ename,
      </if>
      <if test="contents != null">
        contents,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="tno != null">
        tno,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="nature != null">
        nature,
      </if>
      <if test="difficulty != null">
        difficulty,
      </if>
      <if test="support != null">
        support,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="num != null">
        num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="ename != null">
        #{ename,jdbcType=VARCHAR},
      </if>
      <if test="contents != null">
        #{contents,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="tno != null">
        #{tno,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="nature != null">
        #{nature,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        #{difficulty,jdbcType=VARCHAR},
      </if>
      <if test="support != null">
        #{support,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.zzti.bean.TopicExample" resultType="java.lang.Long">
    select count(*) from t_topic
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_topic
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cname != null">
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.ename != null">
        ename = #{record.ename,jdbcType=VARCHAR},
      </if>
      <if test="record.contents != null">
        contents = #{record.contents,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.tno != null">
        tno = #{record.tno,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.nature != null">
        nature = #{record.nature,jdbcType=VARCHAR},
      </if>
      <if test="record.difficulty != null">
        difficulty = #{record.difficulty,jdbcType=VARCHAR},
      </if>
      <if test="record.support != null">
        support = #{record.support,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_topic
    set id = #{record.id,jdbcType=INTEGER},
      cname = #{record.cname,jdbcType=VARCHAR},
      ename = #{record.ename,jdbcType=VARCHAR},
      contents = #{record.contents,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      tno = #{record.tno,jdbcType=INTEGER},
      type = #{record.type,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      nature = #{record.nature,jdbcType=VARCHAR},
      difficulty = #{record.difficulty,jdbcType=VARCHAR},
      support = #{record.support,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.zzti.bean.Topic">
    update t_topic
    <set>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="ename != null">
        ename = #{ename,jdbcType=VARCHAR},
      </if>
      <if test="contents != null">
        contents = #{contents,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="tno != null">
        tno = #{tno,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="nature != null">
        nature = #{nature,jdbcType=VARCHAR},
      </if>
      <if test="difficulty != null">
        difficulty = #{difficulty,jdbcType=VARCHAR},
      </if>
      <if test="support != null">
        support = #{support,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.zzti.bean.Topic">
    update t_topic
    set cname = #{cname,jdbcType=VARCHAR},
      ename = #{ename,jdbcType=VARCHAR},
      contents = #{contents,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      tno = #{tno,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      nature = #{nature,jdbcType=VARCHAR},
      difficulty = #{difficulty,jdbcType=VARCHAR},
      support = #{support,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>