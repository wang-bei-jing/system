<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zzti.dao.StudentCommentMapper">
  <resultMap id="BaseResultMap" type="edu.zzti.bean.StudentComment">
    <id column="sc_id" jdbcType="INTEGER" property="scId" />
    <result column="sc_tps_id" jdbcType="INTEGER" property="scTpsId" />
    <result column="sc_content" jdbcType="VARCHAR" property="scContent" />
    <result column="sc_time" jdbcType="TIMESTAMP" property="scTime" />
  </resultMap>

<!-- xwq开始 -->
  <resultMap id="BaseResultMapWith" type="edu.zzti.bean.StudentComment">
    <id column="sc_id" jdbcType="INTEGER" property="scId" />
    <result column="sc_tps_id" jdbcType="INTEGER" property="scTpsId" />
    <result column="sc_content" jdbcType="VARCHAR" property="scContent" />
    <result column="sc_time" jdbcType="TIMESTAMP" property="scTime" />
    <association property="teacherComment" javaType="edu.zzti.bean.TeacherComment">
      <id column="tc_id" jdbcType="INTEGER" property="tcId" />
      <result column="tc_tno" jdbcType="INTEGER" property="tcTno" />
      <result column="tc_tps_id" jdbcType="INTEGER" property="tcTpsId" />
      <result column="tc_sc_id" jdbcType="INTEGER" property="tcScId" />
      <result column="tc_content" jdbcType="VARCHAR" property="tcContent" />
      <result column="tc_time" jdbcType="TIMESTAMP" property="tcTime" />
      <result column="tc_all" jdbcType="INTEGER" property="tcAll" />
    </association>
    <association property="topicSelect" javaType="edu.zzti.bean.TopicSelect">
      <id column="tsId" jdbcType="INTEGER" property="id" />
      <result column="s_sno" jdbcType="VARCHAR" property="sSno" />
      <result column="t_tno" jdbcType="INTEGER" property="tTno" />
      <result column="tp_id" jdbcType="INTEGER" property="tpId" />
      <result column="tsStatus" jdbcType="VARCHAR" property="status" />
    </association>
    <!-- 关联字段封装 -->
    <association property="student" javaType="edu.zzti.bean.Student">
      <id column="sno" jdbcType="VARCHAR" property="sno" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="sName" jdbcType="VARCHAR" property="name" />
      <result column="sex" jdbcType="VARCHAR" property="sex" />
      <result column="tel" jdbcType="VARCHAR" property="tel" />
      <result column="email" jdbcType="VARCHAR" property="email" />
      <result column="sDepartment" jdbcType="VARCHAR" property="department" />
      <result column="classes" jdbcType="VARCHAR" property="classes" />
      <result column="sStatus" jdbcType="INTEGER" property="status" />
    </association>
    <association property="topic" javaType="edu.zzti.bean.Topic">
      <id column="tpId" jdbcType="INTEGER" property="id" />
      <result column="tpName" jdbcType="VARCHAR" property="name" />
      <result column="contents" jdbcType="VARCHAR" property="contents" />
      <result column="tno" jdbcType="INTEGER" property="tno" />
      <result column="type" jdbcType="VARCHAR" property="type" />
      <result column="source" jdbcType="VARCHAR" property="source" />
      <result column="difficulty" jdbcType="VARCHAR" property="difficulty" />
      <result column="support" jdbcType="VARCHAR" property="support" />
      <result column="tpDepartment" jdbcType="VARCHAR" property="department" />
      <result column="tpStatus" jdbcType="INTEGER" property="status" />
      <result column="num" jdbcType="INTEGER" property="num" />
    </association>
  </resultMap>
<!-- xwq结束 -->

  <sql id="Base_Column_List">
    sc_id, sc_tps_id, sc_content, sc_time
  </sql>

<!-- xwq开始 -->
  <select id="selectByTno" parameterType="java.lang.Integer" resultMap="BaseResultMapWith">
    select *,t_topicselect.id tsId,t_topicselect.status tsStatus,t_student.name sName,t_student.department sDepartment,t_student.status sStatus,t_topic.id tpId,t_topic.name tpName,t_topic.department tpDepartment,t_topic.status tpStatus
    from t_studentcomment left join t_teachercomment on t_studentcomment.sc_id=t_teachercomment.tc_sc_id,t_topicselect,t_student,t_topic
    where t_studentcomment.sc_tps_id = t_topicselect.id
    and t_topicselect.s_sno = t_student.sno
    and t_topicselect.tp_id = t_topic.id
    and t_topicselect.status = 1
    and t_topicselect.t_tno= #{tno,jdbcType=INTEGER}
    order by t_studentcomment.sc_time desc
  </select>
  <select id="findAllBySno" parameterType="java.lang.String" resultMap="BaseResultMapWith">
    select *,t_topicselect.id tsId,t_topicselect.status tsStatus,t_student.name sName,t_student.department sDepartment,t_student.status sStatus,t_topic.id tpId,t_topic.name tpName,t_topic.department tpDepartment,t_topic.status tpStatus
    from t_studentcomment left join t_teachercomment on t_studentcomment.sc_id=t_teachercomment.tc_sc_id,t_topicselect,t_student,t_topic
    where t_studentcomment.sc_tps_id = t_topicselect.id
    and t_topicselect.s_sno = t_student.sno
    and t_topicselect.tp_id = t_topic.id
    and t_topicselect.status = 1
    and t_studentcomment.sc_tps_id=
    (select tps.id from t_topicselect tps where s_sno=#{sno,jdbcType=VARCHAR} and status='1')
  </select>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMapWith">
    select *,t_topicselect.id tsId,t_topicselect.status tsStatus,t_student.name sName,t_student.department sDepartment,t_student.status sStatus,t_topic.id tpId,t_topic.name tpName,t_topic.department tpDepartment,t_topic.status tpStatus
    from t_studentcomment left join t_teachercomment on t_studentcomment.sc_id=t_teachercomment.tc_sc_id,t_topicselect,t_student,t_topic
    where t_studentcomment.sc_tps_id = t_topicselect.id
    and t_topicselect.s_sno = t_student.sno
    and t_topicselect.tp_id = t_topic.id
    and t_topicselect.status = 1
    and sc_id = #{scId,jdbcType=INTEGER}
  </select>
<!-- xwq结束 -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_studentcomment
    where sc_id = #{scId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_studentcomment
    where sc_id = #{scId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.zzti.bean.StudentComment">
    insert into t_studentcomment (sc_id, sc_tps_id, sc_content, 
      sc_time)
    values (#{scId,jdbcType=INTEGER}, #{scTpsId,jdbcType=INTEGER}, #{scContent,jdbcType=VARCHAR}, 
      #{scTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="edu.zzti.bean.StudentComment">
    insert into t_studentcomment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="scId != null">
        sc_id,
      </if>
      <if test="scTpsId != null">
        sc_tps_id,
      </if>
      <if test="scContent != null">
        sc_content,
      </if>
      <if test="scTime != null">
        sc_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="scId != null">
        #{scId,jdbcType=INTEGER},
      </if>
      <if test="scTpsId != null">
        #{scTpsId,jdbcType=INTEGER},
      </if>
      <if test="scContent != null">
        #{scContent,jdbcType=VARCHAR},
      </if>
      <if test="scTime != null">
        #{scTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.zzti.bean.StudentComment">
    update t_studentcomment
    <set>
      <if test="scTpsId != null">
        sc_tps_id = #{scTpsId,jdbcType=INTEGER},
      </if>
      <if test="scContent != null">
        sc_content = #{scContent,jdbcType=VARCHAR},
      </if>
      <if test="scTime != null">
        sc_time = #{scTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where sc_id = #{scId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.zzti.bean.StudentComment">
    update t_studentcomment
    set sc_tps_id = #{scTpsId,jdbcType=INTEGER},
      sc_content = #{scContent,jdbcType=VARCHAR},
      sc_time = #{scTime,jdbcType=TIMESTAMP}
    where sc_id = #{scId,jdbcType=INTEGER}
  </update>


  <resultMap id="BaseResultMapWithTeacherComment" type="edu.zzti.bean.StudentComment">
    <id column="sc_id" jdbcType="INTEGER" property="scId" />
    <result column="sc_tps_id" jdbcType="INTEGER" property="scTpsId" />
    <result column="sc_content" jdbcType="VARCHAR" property="scContent" />
    <result column="sc_time" jdbcType="TIMESTAMP" property="scTime" />
    <association property="teacherComment" javaType="edu.zzti.bean.TeacherComment">
      <id column="tc_id" jdbcType="INTEGER" property="tcId" />
      <result column="tc_tps_id" jdbcType="INTEGER" property="tcTpsId" />
      <result column="tc_sc_id" jdbcType="INTEGER" property="tcScId" />
      <result column="tc_content" jdbcType="VARCHAR" property="tcContent" />
      <result column="tc_time" jdbcType="TIMESTAMP" property="tcTime" />
    </association>
  </resultMap>

  <select id="findAllCommentsBySnoAndStatus" parameterType="java.lang.String" resultMap="BaseResultMapWithTeacherComment">
    select *
    from t_studentcomment sc left join t_teachercomment tc on sc.sc_id=tc.tc_sc_id
    where sc.sc_tps_id=
    (select tps.id from t_topicselect tps where s_sno=#{sno,jdbcType=VARCHAR} and status='1')
  </select>
</mapper>