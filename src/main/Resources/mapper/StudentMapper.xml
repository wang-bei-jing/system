<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zzti.dao.StudentMapper">
  <resultMap id="BaseResultMap" type="edu.zzti.bean.Student">
    <id column="sno" jdbcType="VARCHAR" property="sno" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="classes" jdbcType="VARCHAR" property="classes" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>




  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sno, password, name, sex, tel, email, department, classes, status
  </sql>

  <!-- xwq开始 -->
  <update id="accept" parameterType="java.lang.String">
    update t_student
    set status=1
    where sno=#{sno,jdbcType=VARCHAR}
  </update>
  <!-- xwq结束 -->

  <select id="selectByExample" parameterType="edu.zzti.bean.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_student
    where sno = #{sno,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from t_student
    where sno = #{sno,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="edu.zzti.bean.StudentExample">
    delete from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.zzti.bean.Student">
    insert into t_student (sno, password, name, 
      sex, tel, email, department, 
      classes, status)
    values (#{sno,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{classes,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.zzti.bean.Student">
    insert into t_student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        sno,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="classes != null">
        classes,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sno != null">
        #{sno,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        #{classes,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.zzti.bean.StudentExample" resultType="java.lang.Long">
    select count(*) from t_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_student
    <set>
      <if test="record.sno != null">
        sno = #{record.sno,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.classes != null">
        classes = #{record.classes,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_student
    set sno = #{record.sno,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      classes = #{record.classes,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.zzti.bean.Student">
    update t_student
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="classes != null">
        classes = #{classes,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where sno = #{sno,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.zzti.bean.Student">
    update t_student
    set password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      classes = #{classes,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where sno = #{sno,jdbcType=VARCHAR}
  </update>








  <select id="studentLogin" parameterType="java.util.HashMap" resultType="java.lang.Integer">
    select count(*)
    from  t_student
    where sno=#{sno,jdbcType=VARCHAR} and password=#{password,jdbcType=VARCHAR}
  </select>
  <select id="findBySno" parameterType="java.lang.String" resultMap="BaseResultMap">
    select *
    from t_student
    where sno=#{sno,jdbcType=VARCHAR}
  </select>

  <update id="updateByAll" parameterType="java.util.HashMap">
    update t_student
    set
    name = #{name,jdbcType=VARCHAR},
    sex = #{sex,jdbcType=VARCHAR},
    tel = #{tel,jdbcType=VARCHAR},
    email = #{email,jdbcType=VARCHAR},
    department = #{department,jdbcType=VARCHAR},
    classes = #{classes,jdbcType=VARCHAR}
    where sno = #{sno,jdbcType=VARCHAR}
  </update>

  <update id="updatePassword" parameterType="map" >
    update t_student
    set password =#{password,jdbcType=VARCHAR}
    where sno =#{sno,jdbcType=VARCHAR}
  </update>

  <select id="findAllStudent" resultMap="BaseResultMap">
    select * from t_student
  </select>

  <select id="findAllStudentByName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from t_student where name like concat('%',#{name},'%')
  </select>

  <delete id="studentDel" parameterType="java.lang.String" >
    delete from  t_student where  sno=#{sno,jdbcType=VARCHAR}
  </delete>

  <select id="findAllStudentByStatus" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from t_student where status=#{status,jdbcType=VARCHAR}
  </select>
  <select id="findAllStudentByStatusAndName" parameterType="map" resultMap="BaseResultMap">
    select * from t_student where status=#{status,jdbcType=VARCHAR} and name like concat('%',#{name},'%')
  </select>

  <insert id="batchInsert" parameterType="list">
    insert into t_student (sno, name, department, classes)
    values
    <foreach collection="list" item="obj" index="index" separator="," >
     (
      #{obj.sno,jdbcType=VARCHAR},
      #{obj.name,jdbcType=VARCHAR},
      #{obj.department,jdbcType=VARCHAR},
      #{obj.classes,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
</mapper>